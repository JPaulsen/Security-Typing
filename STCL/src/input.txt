(bool True)
(int 0)
(float 0)
(float 0.0)
(str "0.0")
(not (bool True))
(and (bool True) (bool False))
(or (bool True) (bool False))
(+ (int 10) (int 5))
(- (int 10) (int 5))
(* (int 10) (int 5))
(/ (int 10) (int 5))
(if (bool True) (int 1) (int 0))
(let x (int 1) (get x))
(function (int) [(int) (int)] [x y] (+ (get x) (get y)))
(apply (function (int) [(int) (int)] [x y] (+ (get x) (get y))) [(int 1) (int 2)])
(let myApply (function (int) [(function (int) [(int) (int)])] [f] (apply (get f) [(int 0) (int 1)])) (apply (get myApply) [(function (int) [(int) (int)] [x y] (+ (get x) (get y)))]))